# Chunk 108
Ecolig2001_2022=ggplot(aes(y=E_coli_MPN_100.mL , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Ecolig2001_2022
# Chunk 109
#dim(Pok2001.2022)
#sub1ecoli=subset(Pok2001.2022, Phosphorus_Total_mg_L)
#dim(sub1ecoli)
ggplot(aes(y=Phosphorus_Total_mg_L, x=Station2, fill=Period), data=sub1ecoli) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
ggtitle("Variation  du phosphore à 20 ans entre les deux Period")
# Chunk 110
Phosg2001=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2001) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2001") +
theme_bw()
Phosg2001
# Chunk 111
Phosg2002=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2002) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2002") +
theme_bw()
Phosg2002
# Chunk 112
Phosg2021=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2021) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2021") +
theme_bw()
Phosg2021
# Chunk 113
Phosg2022=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2022) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2022") +
theme_bw()
Phosg2022
# Chunk 114
PhosPeriod01=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Period1) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2001_2002") +
theme_bw()
PhosPeriod01
# Chunk 115
PhosPeriod02=ggplot(aes(y=Phosphorus_Total_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Period2) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2021_2022") +
theme_bw()
PhosPeriod02
# Chunk 116
## Pour crée un graphique qui montre les ligne de variation de tout les dates(periode) entre la variable et tous les stations
scatterplot(Period1$Phosphorus_Total_mg_L~Period1$Date | Period1$Station2,
smooth=F)
# Chunk 117
ggarrange(Phosg2001, Phosg2002, Phosg2021, Phosg2022, ncol=2, nrow=2)
# Chunk 118
Phosg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Phosg2001_2022
# Chunk 119
ggplot(aes(y=Nitrate_as_N_mg_L, x=Station2, fill=Period), data=sub1ecoli) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
ggtitle("Variation  des Nitrates à 20 ans entre les deux Period")
# Chunk 120
Nitrateg2001=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2001) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2001") +
theme_bw()
Nitrateg2001
# Chunk 121
Nitrateg2002=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2002) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2002") +
theme_bw()
Nitrateg2002
# Chunk 122
Nitrateg2021=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2021) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2021") +
theme_bw()
Nitrateg2021
# Chunk 123
Nitrateg2022=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Year2022) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2022") +
theme_bw()
Nitrateg2022
# Chunk 124
NitratePeriod01=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Period1) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2001_2002") +
theme_bw()
NitratePeriod01
# Chunk 125
NitratePeriod02=ggplot(aes(y=Nitrate_as_N_mg_L, x=Date,
group=Station2, shape=Station2, color=Station2), data=Period2) +
scale_shape_manual(values=1:nlevels(Year2001$Station2)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 month", date_labels = "%B %Y")+
ggtitle("2021_2022") +
theme_bw()
NitratePeriod02
# Chunk 126
## Pour crée un graphique qui montre les ligne de variation de tout les dates(periode) entre la variable et tous les stations
scatterplot(Period1$Nitrate_as_N_mg_L~Period1$Date | Period1$Station2,
smooth=F)
# Chunk 127
ggarrange(Nitrateg2001, Nitrateg2002, Nitrateg2021, Nitrateg2022, ncol=2, nrow=2)
# Chunk 128
Nitrateg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
# Chunk 129
hist(Pok2001.2022$Hardness_as_CaCO3_mg_L)
# Chunk 130
boxplot(Pok2001.2022$Hardness_as_CaCO3_mg_L ~ Pok2001.2022$Period)
# Chunk 131
tapply(Pok2001.2022$Hardness_as_CaCO3_mg_L, Pok2001.2022$Period, summary)
# Chunk 132
shapiro.test(Pok2001.2022$Hardness_as_CaCO3_mg_L)
qqnorm(Pok2001.2022$Hardness_as_CaCO3_mg_L)
qqline(Pok2001.2022$Hardness_as_CaCO3_mg_L)
# Chunk 133
Hard2001.2002=subset(Pok2001.2022, Period=="2001-2002",
select="Hardness_as_CaCO3_mg_L")
class(Hard2001.2002)
dim(Hard2001.2002) # 102 rangées x 1 colonne
# Chunk 134
groupe1Hard=Hard2001.2002[1:96,]
groupe1Hard
length(groupe1Hard)
Hard2021.2022=subset(Pok2001.2022, Period=="2021-2022",
select="Hardness_as_CaCO3_mg_L")
dim(Hard2021.2022) # 96 rangées x 1 colonne
groupe2Hard=Hard2021.2022[1:96,]
length(groupe2Hard)
t.test(groupe1Hard, groupe2Hard, paired=T)
# Chunk 135
t.test(Pok2001.2022$Hardness_as_CaCO3_mg_L~Pok2001.2022$Period)
# p=0.038
# Chunk 136
# Obtenir de l'aide sur une fonction
# help(wilcox.test)
wilcox.test(Pok2001.2022$Hardness_as_CaCO3_mg_L~Pok2001.2022$Period)
# p=0.019
# Chunk 137
boxplot(Pok2001.2022$Hardness_as_CaCO3_mg_L ~ Pok2001.2022$Station2)
# Chunk 138
# D’abord vérifier les conditions
# ... à faire....
# Exécuter le test si les conditions sont respectées:
modelaov1=aov(Pok2001.2022$Hardness_as_CaCO3_mg_L ~ Pok2001.2022$Station)
modelaov1
summary(modelaov1)
# p<0.0001
# Chunk 139
names(Pok2001.2022)
plot(Pok2001.2022$Hardness_as_CaCO3_mg_L~Pok2001.2022$AlkalinityCaCO3_mg_L)
cor.test(Pok2001.2022$Hardness_as_CaCO3_mg_L, Pok2001.2022$AlkalinityCaCO3_mg_L,
method=c('pearson'))
# Chunk 140
env=subset(Pok2001.2022, select=c("Turbidity_NTU", "pH_units", "Conductivity_microS_cm", "Colour_TCU", "Phosphorus_Total_mg_L", "Oxyg_dissous_YSI_mg_L", "E_coli_MPN_100.mL"))
dim(env)
pairs(env)
# Chunk 141
Tempg2001_2022=ggplot(aes(y=Temp_eau_YSI_degC, x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Tempg2001_2022
O2g2001_2022b=ggplot(aes(y=Oxyg_dissous_YSI_mg_L, x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
O2g2001_2022b
Tempg2001_2022=ggplot(aes(y=Temp_eau_YSI_degC, x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Tempg2001_2022
O2g2001_2022b=ggplot(aes(y=Oxyg_dissous_YSI_mg_L, x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
O2g2001_2022b
ggarrange(Condg2001, Condg2002, Condg2021, Condg2022, ncol=2, nrow=2)
Condg2001_2022=ggplot(aes(y=Conductivity_microS_cm , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Condg2001_2022
ggarrange(Turbg2001, Turbg2002, Turbg2021, Turbg2022, ncol=2, nrow=2)
Turbg2001_2022=ggplot(aes(y=Turbidity_NTU , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Turbg2001_2022
ggarrange(Coulg2001, Coulg2002, Coulg2021, Coulg2022, ncol=2, nrow=2)
Coulg2001_2022=ggplot(aes(y=Colour_TCU , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Coulg2001_2022
ggarrange(CTOg2001, CTOg2002, CTOg2021, CTOg2022, ncol=2, nrow=2)
CTOg2001_2022=ggplot(aes(y=Carbon_Total_Organic_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
CTOg2001_2022
Coulg2001_2022=ggplot(aes(y=Colour_TCU , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Coulg2001_2022
CTOg2001_2022=ggplot(aes(y=Carbon_Total_Organic_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
CTOg2001_2022
CTOg2001_2022=ggplot(aes(y=Carbon_Total_Organic_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
CTOg2001_2022
CTOg2001_2022=ggplot(aes(y=Carbon_Total_Organic_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
CTOg2001_2022
ggarrange(Ecolig2001, Ecolig2002, Ecolig2021, Ecolig2022, ncol=2, nrow=2)
Ecolig2001_2022=ggplot(aes(y=E_coli_MPN_100.mL , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Ecolig2001_2022
ggarrange(Phosg2001, Phosg2002, Phosg2021, Phosg2022, ncol=2, nrow=2)
Phosg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Phosg2001_2022
ggarrange(Nitrateg2001, Nitrateg2002, Nitrateg2021, Nitrateg2022, ncol=2, nrow=2)
Nitrateg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
Nitrateg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
ggarrange(Nitrateg2001, Nitrateg2002, Nitrateg2021, Nitrateg2022, ncol=2, nrow=2)
Nitrateg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
#dim(Pok2001.2022)
#sub1ecoli=subset(Pok2001.2022, Phosphorus_Total_mg_L)
#dim(sub1ecoli)
ggplot(aes(y=Phosphorus_Total_mg_L, x=Station2, fill=Period), data=sub1ecoli) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
ggtitle("Variation  du phosphore à 20 ans entre les deux Period")
Ecolig2001_2022=ggplot(aes(y=E_coli_MPN_100.mL , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Ecolig2001_2022
#dim(Pok2001.2022)
#sub1ecoli=subset(Pok2001.2022, Phosphorus_Total_mg_L)
#dim(sub1ecoli)
ggplot(aes(y=Phosphorus_Total_mg_L, x=Station2, fill=Period), data=sub1ecoli) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
ggtitle("Variation  du phosphore à 20 ans entre les deux Period")
ggarrange(Phosg2001, Phosg2002, Phosg2021, Phosg2022, ncol=2, nrow=2)
Phosg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Phosg2001_2022
ggarrange(Nitrateg2001, Nitrateg2002, Nitrateg2021, Nitrateg2022, ncol=2, nrow=2)
Nitrateg2001_2022=ggplot(aes(y=Phosphorus_Total_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
ggarrange(Nitrateg2001, Nitrateg2002, Nitrateg2021, Nitrateg2022, ncol=2, nrow=2)
Nitrateg2001_2022=ggplot(aes(y=Nitrate_as_N_mg_L , x=Campagne), data=Pok2001.2022) +
scale_shape_manual(values=1:nlevels(Pok2001.2022$Station2)) +
geom_line(aes(color=Station2, linetype=Station2)) +
geom_point(aes(color=Station2, shape=Station2)) +
theme_bw()
Nitrateg2001_2022
Pok2001.2022[order(Pok2001.2022$Temp_eau_YSI_degC),
c("Station2", "Date", "Temp_eau_YSI_degC")]
# Chunk 1: Charger_librairies
library("ggpubr") # pour la fonction ggarrange
library("ggplot2")
library("car")
# ggpubr qui permet de rassembler plusieurs plots
library("ggplot2") # to do sophisticated ("high-level") plots
library("stats") #
# library() # list available libraries (not necessarily loaded)
# library(lib.loc=.Library)
library("car") # pour la fonction "scatterplot"
library("psych") # pour la fonction "describe"
library("ggfortify", warn.conflicts=T)
# to do sophisticated ("high-level") plots, namely "autoplot"
# install.packages("skimr")
# library("skimr")
# "skimr" permet d'obtenir des stats et des mini-histogrammes
# install.packages("DataExplorer")
# library(DataExplorer)
# "DataExplorer" pour obtenir un rapport html des statistiques de base
# installed.packages()
# (.packages()) # to list loaded libraries at startup.
# .libPaths() # where libraries read from.
# or...
# .packages(all.available = TRUE) # to list all packages installed
# ... but not necessarily loaded with command "library"
# system.file(package='stats') # to check where is package
# find.package("utils")
# (.packages()) # to list loaded libraries
# Chunk 2: Effacer_tout
# Dernière modification 2024-06-27 15:04
# Supprimer tous les objets en mémoire avant d'exécuter le script
rm(list=ls(all=TRUE)) # to erase, remove, delete objects from environment
oldpar=par(no.readonly=TRUE) # to keep original graphical parameters
# Chunk 3: set_dir
# setwd("C:/Users/mrdos/OneDrive/Documents/Shippagan_mai_aout_2024/Analyse_R_sum/Github")
# getwd()
# list.files()
# Répertoire pour Gaël
setwd("~/Shippagan_mai_aout_2024/Analyse_R_sum/Ranalyse")
# Répertoire pour Alain
# setwd("/media/alain/ap2To/UMCS_bak/Documents/SUPERVISION/Gael/github_Gael")
# Je préfère y aller par le menu au début d'une session d'analyse:
# Session > Set Working Directory > To Source File Location
getwd()
# list.files()
list.files(all.files=T, pattern="RData")
# Chunk 4: charger_Pok2001.2022.RData
load("./Pok2001.2022.RData")
library("ggpubr") # pour la fonction ggarrange
library("ggplot2")
library("car")
# ggpubr qui permet de rassembler plusieurs plots
library("ggplot2") # to do sophisticated ("high-level") plots
library("stats") #
# library() # list available libraries (not necessarily loaded)
# library(lib.loc=.Library)
library("car") # pour la fonction "scatterplot"
library("psych") # pour la fonction "describe"
library("ggfortify", warn.conflicts=T)
# to do sophisticated ("high-level") plots, namely "autoplot"
# install.packages("skimr")
# library("skimr")
# "skimr" permet d'obtenir des stats et des mini-histogrammes
# install.packages("DataExplorer")
# library(DataExplorer)
# "DataExplorer" pour obtenir un rapport html des statistiques de base
# installed.packages()
# (.packages()) # to list loaded libraries at startup.
# .libPaths() # where libraries read from.
# or...
# .packages(all.available = TRUE) # to list all packages installed
# ... but not necessarily loaded with command "library"
# system.file(package='stats') # to check where is package
# find.package("utils")
# (.packages()) # to list loaded libraries
# Répertoire pour Gaël
setwd("~/Shippagan_mai_aout_2024/Analyse_R_sum/Ranalyse")
# list.files()
list.files(all.files=T, pattern="RData")
load("./Pok2001.2022.RData")
strwrap("Faire de même pour les onze autres stations (pendant l'été 2024).")
# Chunk 1: Charger_librairies
library("ggpubr") # pour la fonction ggarrange
library("ggplot2")
library("car")
# ggpubr qui permet de rassembler plusieurs plots
library("ggplot2") # to do sophisticated ("high-level") plots
library("stats") #
# library() # list available libraries (not necessarily loaded)
# library(lib.loc=.Library)
library("car") # pour la fonction "scatterplot"
library("psych") # pour la fonction "describe"
library("ggfortify", warn.conflicts=T)
# to do sophisticated ("high-level") plots, namely "autoplot"
# install.packages("skimr")
# library("skimr")
# "skimr" permet d'obtenir des stats et des mini-histogrammes
# install.packages("DataExplorer")
# library(DataExplorer)
# "DataExplorer" pour obtenir un rapport html des statistiques de base
# installed.packages()
# (.packages()) # to list loaded libraries at startup.
# .libPaths() # where libraries read from.
# or...
# .packages(all.available = TRUE) # to list all packages installed
# ... but not necessarily loaded with command "library"
# system.file(package='stats') # to check where is package
# find.package("utils")
# (.packages()) # to list loaded libraries
# Chunk 2: Effacer_tout
# Dernière modification 2024-06-27 15:04
# Supprimer tous les objets en mémoire avant d'exécuter le script
rm(list=ls(all=TRUE)) # to erase, remove, delete objects from environment
oldpar=par(no.readonly=TRUE) # to keep original graphical parameters
# Chunk 3: set_dir
# setwd("C:/Users/mrdos/OneDrive/Documents/Shippagan_mai_aout_2024/Analyse_R_sum/Github")
# getwd()
# list.files()
# Répertoire pour Gaël
setwd("~/Shippagan_mai_aout_2024/Analyse_R_sum/Ranalyse")
# Répertoire pour Alain
# setwd("/media/alain/ap2To/UMCS_bak/Documents/SUPERVISION/Gael/github_Gael")
# Je préfère y aller par le menu au début d'une session d'analyse:
# Session > Set Working Directory > To Source File Location
getwd()
# list.files()
list.files(all.files=T, pattern="RData")
# Chunk 4: charger_Pok2001.2022.RData
load("./Pok2001.2022.RData")
# Chunk 6: Tableau_2001_etc
# Créer un tableau par année
Year2001=subset(Pok2001.2022, Year=="2001")
